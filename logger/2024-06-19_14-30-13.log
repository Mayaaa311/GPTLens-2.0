2024-06-19 14:30:24,727 - INFO - code: 
pragma solidity ^0.8.0;
mapping(address => uint256) public balances;

function deposit() public payable {
    balances[msg.sender] += msg.value;
}

function withdraw(uint256 amount) public {
    require(balances[msg.sender] >= amount, "Insufficient balance");
    payable(msg.sender).transfer(amount);
    balances[msg.sender] -= amount;
}

2024-06-19 14:31:04,513 - INFO - response from auditor: 
2024-06-19 14:31:04,514 - ERROR - Failed to parse JSON: 
2024-06-19 14:31:04,515 - INFO - code: 
pragma solidity ^0.8.0;
mapping(address => uint256) public balances;

function deposit() public payable {
    balances[msg.sender] += msg.value;
}

function withdraw(uint256 amount) public {
    require(balances[msg.sender] >= amount, "Insufficient balance");
    payable(msg.sender).transfer(amount);
    balances[msg.sender] -= amount;
}

2024-06-19 14:31:04,831 - INFO - response from auditor: 
2024-06-19 14:31:04,832 - ERROR - Failed to parse JSON: 
2024-06-19 14:31:04,832 - INFO - code: 
pragma solidity ^0.8.0;
mapping(address => uint256) public balances;

function deposit() public payable {
    balances[msg.sender] += msg.value;
}

function withdraw(uint256 amount) public {
    require(balances[msg.sender] >= amount, "Insufficient balance");
    payable(msg.sender).transfer(amount);
    balances[msg.sender] -= amount;
}

2024-06-19 14:31:05,159 - INFO - response from auditor: 
2024-06-19 14:31:05,160 - ERROR - Failed to parse JSON: 
2024-06-19 14:31:05,160 - INFO - Vulnerabilities found: []
2024-06-19 14:31:05,161 - INFO - Evaluations: []
2024-06-19 14:31:05,169 - INFO - Results saved to result/ranked_vulnerabilities.txt
