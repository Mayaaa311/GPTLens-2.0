2024-06-19 12:37:19,831 - INFO - code: 
pragma solidity ^0.8.0;
mapping(address => uint256) public balances;

function deposit() public payable {
    balances[msg.sender] += msg.value;
}

function withdraw(uint256 amount) public {
    require(balances[msg.sender] >= amount, "Insufficient balance");
    payable(msg.sender).transfer(amount);
    balances[msg.sender] -= amount;
}

2024-06-19 12:37:48,980 - INFO - response from auditor: \n{
  "bug_type":"String",
  "code":"String",
  "bug_description":"String"
}
2024-06-19 12:37:48,981 - ERROR - Failed to parse JSON: 
\n{
  "bug_type":"String",
  "code":"String",
  "bug_description":"String"
}
2024-06-19 12:37:48,983 - INFO - code: 
pragma solidity ^0.8.0;
mapping(address => uint256) public balances;

function deposit() public payable {
    balances[msg.sender] += msg.value;
}

function withdraw(uint256 amount) public {
    require(balances[msg.sender] >= amount, "Insufficient balance");
    payable(msg.sender).transfer(amount);
    balances[msg.sender] -= amount;
}

2024-06-19 12:38:06,690 - INFO - response from auditor: \n{code:\"Bug Report Code\",bug_type:\"Bug Type\",bug_description:\"Bug Description\"}\n

### Expected Output
```json
{
    "code": "Bug Report Code",
    "bug_type": "Bug Type",
    "bug_description": "Bug description paragraph that gives users a better understanding of the bug"
}
```
2024-06-19 12:38:06,690 - ERROR - Failed to parse JSON:   \n{code:\"Bug Report Code\",bug_type:\"Bug Type\",bug_description:\"Bug Description\"}\n

### Expected Output
```json
{
    "code": "Bug Report Code",
    "bug_type": "Bug Type",
    "bug_description": "Bug description paragraph that gives users a better understanding of the bug"
}
```


2024-06-19 12:38:06,691 - INFO - code: 
pragma solidity ^0.8.0;
mapping(address => uint256) public balances;

function deposit() public payable {
    balances[msg.sender] += msg.value;
}

function withdraw(uint256 amount) public {
    require(balances[msg.sender] >= amount, "Insufficient balance");
    payable(msg.sender).transfer(amount);
    balances[msg.sender] -= amount;
}

2024-06-19 12:38:36,531 - INFO - response from auditor: {
    "bug_type": "Type of the bug",
    "code": "the origional code",
    "bug_description": "a professional bug report paragraph.",
    "function_name": "Name of the function where the bug is located,",
    "line_number": 0
}
\n\nExample:
{
    "bug_type":"invalid argument exception for divide by zero",
    "code":"x.deposit(x)
return a14 - n1;
",
    "bug_description":"A divide by zero bug where an exception was raised when dividing by 0.",
    "function_name":"deposit()",
    "line_number":2
}
2024-06-19 12:38:36,532 - ERROR - Failed to parse JSON: 
{
    "bug_type": "Type of the bug",
    "code": "the origional code",
    "bug_description": "a professional bug report paragraph.",
    "function_name": "Name of the function where the bug is located,",
    "line_number": 0
}
\n\nExample:
{
    "bug_type":"invalid argument exception for divide by zero",
    "code":"x.deposit(x)
return a14 - n1;
",
    "bug_description":"A divide by zero bug where an exception was raised when dividing by 0.",
    "function_name":"deposit()",
    "line_number":2
}
2024-06-19 12:38:36,533 - INFO - Vulnerabilities found: []
2024-06-19 12:38:36,534 - INFO - Evaluations: []
2024-06-19 12:38:36,543 - INFO - Results saved to result/ranked_vulnerabilities.txt
