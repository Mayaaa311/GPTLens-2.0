
{
    "output_list": [
        {
            "function_name": "transfer",
            "code": "function transfer(address _to, uint256 _value) public whenNotPaused returns (bool) {\n    return super.transfer(_to, _value);\n}",
            "vulnerability": "Reentrancy",
            "reason": "The function transfer() is not reentrant and it can be called by an attacker to drain the contract of its funds."
        },
        {
            "function_name": "transferFrom",
            "code": "function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused returns (bool) {\n    return super.transferFrom(_from, _to, _value);\n}",
            "vulnerability": "Reentrancy",
            "reason": "The function transferFrom() is not reentrant and it can be called by an attacker to drain the contract of its funds."
        },
        {
            "function_name": "approve",
            "code": "function approve(address _spender, uint256 _value) public whenNotPaused returns (bool) {\n    return super.approve(_spender, _value);\n}",
            "vulnerability": "Reentrancy",
            "reason": "The function approve() is not reentrant and it can be called by an attacker to drain the contract of its funds."
        },
        {
            "function_name": "batchTransfer",
            "code": "function batchTransfer(address[] _receivers, uint256 _value) public whenNotPaused returns (bool) {\n    uint cnt = _receivers.length;\n    uint256 amount = uint256(cnt) * _value;\n    require(cnt > 0 && cnt <= 20);\n    require(_value > 0 && balances[msg.sender] >= amount);\n    balances[msg.sender] = balances[msg.sender].sub(amount);\n    for (uint i = 0; i < cnt; i++) {\n        balances[_receivers[i]] = balances[_receivers[i]].add(_value);\n        Transfer(msg.sender, _receivers[i], _value);\n    }\n    return true;\n}",
            "vulnerability": "Reentrancy",
            "reason": "The function batchTransfer() is not reentrant and it can be called by an attacker to drain the contract of its funds."
        },
        {
            "function_name": "transfer",
            "code": "function transfer(address _to, uint256 _value) public whenNotPaused returns (bool) {\n    return super.transfer(_to, _value);\n}",
            "vulnerability": "Unchecked Call Return Value",
            "reason": "The function transfer() calls the function transfer() of the contract PausableToken and does not check its return value."
        },
        {
            "function_name": "transferFrom",
            "code": "function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused returns (bool) {\n    return super.transferFrom(_from, _to, _value);\n}",
            "vulnerability": "Unchecked Call Return Value",
            "reason": "The function transferFrom() calls the function transferFrom() of the contract PausableToken and does not check its return value."
        },
        {
            "function_name": "approve",
            "code": "function approve(address _spender, uint256 _value) public whenNotPaused returns (bool) {\n    return super.approve(_spender, _value);\n}",
            "vulnerability": "Unchecked Call Return Value",
            "reason": "The function approve() calls the function approve() of the contract PausableToken and does not check its return value."
        },
        {
            "function_name": "batchTransfer",
            "code": "function batchTransfer(address[] _receivers, uint256 _value) public whenNotPaused returns (bool) {\n    uint cnt = _receivers.length;\n    uint256 amount = uint256(cnt) * _value;\n    require(cnt > 0 && cnt <= 20);\n    require(_value > 0 && balances[msg.sender] >= amount);\n    balances[msg.sender] = balances[msg.sender].sub(amount);\n    for (uint i = 0; i < cnt; i++) {\n        balances[_receivers[i]] = balances[_receivers[i]].add(_value);\n        Transfer(msg.sender, _receivers[i], _value);\n    }\n    return true;\n}",
            "vulnerability": "Unchecked Call Return Value",
            "reason": "The function batchTransfer() calls the function transfer() of the contract PausableToken and does not check its return value."
        },
        {
            "function_name": "transfer",
            "code": "function transfer(address _to, uint256 _value) public whenNotPaused returns (bool) {\n    return super.transfer(_to, _value);\n}",
            "vulnerability": "Unchecked Call Return Value",
            "reason": "The function transfer() calls the function transfer() of the contract PausableToken and does not check its return value."
        },
        {
            "function_name": "transferFrom",
            "code": "function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused returns (bool) {\n    return super.transferFrom(_from, _to, _value);\n}",
            "vulnerability": "Unchecked Call Return Value",
            "reason": "The function transferFrom() calls the function transferFrom() of the contract PausableToken and does not check its return value."
        }
    ]
}