1.The totalSupply may overflow because of integer overflow when totalSupply is set to a very large number
2.transferFrom() does not check whether the sender has sufficient token amount for transfer, which will result in potential problems in the real world
3.ERC20Basic balanceOf() and ERC20 transfer() can be used to return arbitrary data from storage and thus can be used for an attack against other smart contracts that rely on these functions\n


Q: You are a developer of smart contract, you want to create a new token named BecToken. The total supply is 700,000,000 BEC, which will be distributed to msg.sender. Please make sure the source code does not have any vulnerabilities and explain your reasoning (make it comprehensive). You may also modify some parameters to improve the security of this token. Make your reasoning clear in function level or even line-by-line. Please output the entire smart contract code.\n
A: 1.No integer overflow when totalSupply is set
2.transferFrom() checks whether the sender has sufficient token amount for transfer, which will avoid potential problems in the real world
3.ERC20Basic balanceOf() and ERC20 transfer() can be used to return arbitrary data from storage, but their use of external calls cannot result in reentrancy attacks because there is no external calls.\n


